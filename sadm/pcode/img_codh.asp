

<%

'Option Explicit
Response.Expires = 0
Response.AddHeader "Pragma","no-cache"
Response.AddHeader "cache-ctrol","no-cache"
Response.ContentType = "Image/GIF" '[BMP]GIF
Randomize Timer

Dim Text_Data(48),Text_Len,Chr_Temp(),I,j,k,Chr_Temp2
Dim PeaceChkCode,OrgChkOrg,PeaceForColr,PeaceBckColr
OrgChkOrg = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ@:/.-_^" 
'OrgChkOrg = "3456789ABCDEFGHJKLMNPQRSTUVWXY^:/.-_@" '012OIZ
PeaceChkCode = Request("ChkCode") : PeaceChkCode = uCase(PeaceChkCode)
PeaceBckColr = Request("BckColr")&""
PeaceForColr = Request("ForColr")&""
If PeaceChkCode = "" Then
  For I=0 To 18
    PeaceChkCode = PeaceChkCode & Mid(OrgChkOrg,Int(Rnd*36)+1,1)
  Next ' ^:/.-_@
  'PeaceChkCode = "PEACE.@/XIE_YS:^-SHIRLEY"
  Dim iMax,iMin,iNum
  iMax=4 : iMin=2 : iNum=Int((iMax - iMin + 1) * Rnd + iMin)
  PeaceChkCode=Left(PeaceChkCode,iNum)
  'Session("ChkCode")=PeaceChkCode
  Config_PSess = Request("Config_PSess")
  If Config_PSess="" Then '记录入Session
	Session("ChkCode") = PeaceChkCode
  Else
	Session(Config_PSess) = PeaceChkCode
  End If
Else
  PeaceChkCode = Left(PeaceChkCode,24)
End If
If NOT isNumeric(PeaceBckColr) Then
  PeaceBckColr = 8
Else
  PeaceBckColr = PeaceBckColr Mod 16
End If
If NOT isNumeric(PeaceForColr) Then
  PeaceForColr = 0
Else
  PeaceForColr = PeaceForColr Mod 16
End If
Text_Len = Len(PeaceChkCode)''验证码长度(支持1-25位)
ReDim Chr_Temp( Text_Len - 1 )
For I = 0 To Text_Len - 1 	 
	 Chr_Temp(I) = inStr(OrgChkOrg,Mid(PeaceChkCode,I+1,1)) - 1
Next

''***** 参数配置区 ***** 一个字母:10宽x11高

' 0~9 
Text_Data(00)  = "00000000000001111000001100110000110111000011011100001100110000111011000011101100001100110000011110000000000000"
Text_Data(01)  = "00000000000000011000000011100000111110000000011000000001100000000110000000011000000001100000000110000000000000"
Text_Data(02)  = "00000000000001111000001100110000110011000000001100000001100000001100000001100000001100000000111111000000000000"
Text_Data(03)  = "00000000000001111000001100110000110011000000001100000011100000000011000011001100001100110000011110000000000000"
Text_Data(04)  = "00000000000001100000000110000000011011000001101100000110110000110011000011111110000000110000000011000000000000"
Text_Data(05)  = "00000000000011111100001100000000110000000011000000001111100000000011000000001100000001100000111100000000000000"
Text_Data(06)  = "00000000000000111000000011000000011000000011111000001100110000110011000011001100001100110000011110000000000000"
Text_Data(07)  = "00000000000011111100000000110000000110000000011000000011000000001100000001100000000110000000011000000000000000"
Text_Data(08)  = "00000000000001111000001100110000110011000011101100000111100000110111000011001100001100110000011110000000000000"
Text_Data(09)  = "00000000000001111000001100110000110011000011001100001100110000011111000000011000000011000000011100000000000000"
' A~G
Text_Data(10)  = "00000000000000110000000111100000110011000011001100001100110000111111000011001100001100110000110011000000000000"
Text_Data(11)  = "00000000000111111000001100110000110011000011101100011111100000110111000011001100001100110001111110000000000000"
Text_Data(12)  = "00000000000000111110000111111000110000000011000000001100000000110000000011000000000111111000001111100000000000"
Text_Data(13)  = "00000000000111111000001111110000110011000011001100001100110000110011000011001100001111110001111110000000000000"
Text_Data(14)  = "00000000000111111110001100001000110000000011000010001111111000110000100011000000001100001001111111100000000000"
Text_Data(15)  = "00000000000111111110001100001000110000000011000010001111111000110000100011000000001100000001111000000000000000"
Text_Data(16)  = "00000000000001111110001100001000110000000011000010001100111000110001100011000110001100011000011111000000000000"
' H~N
Text_Data(17)  = "00000000000111001110001100110000110011000011001100001111110000110011000011001100001100110001110011100000000000"
Text_Data(18)  = "00000000000011111100000111100000001100000000110000000011000000001100000000110000000111100000111111000000000000"
Text_Data(19)  = "00000000000011111100000011100000000110000000011000000001100000000110000000011000001101100000111100000000000000"
Text_Data(20)  = "00000000000111000110001100110000110110000011110000001111000000110110000011001100001100110001110001100000000000"
Text_Data(21)  = "00000000000111100000001100000000110000000011000000001100000000110000000011000010001111111001111111100000000000"
Text_Data(22)  = "00000000000110000110011000011001110011100111001110011011011001101101100110110110011000011001100001100000000000"
Text_Data(23)  = "00000000000111001100001100110000111011000011111100001101110000110011000011001100001100110000110011000000000000"
' O~T
Text_Data(24)  = "00000000000001111000001100110001100001100110000110011000011001100001100110000110001100110000011110000000000000"
Text_Data(25)  = "00000000000111111110001100011000110001100011000110001100110000111110000011000000001100000001111000000000000000"
Text_Data(26)  = "00000000000001111000001100110001100001100110000110011000011001100111100110001110001100111000011100110000000000"
Text_Data(27)  = "00000000000111111110001100011000110001100011001100001111000000111110000011001100001100011001110001110000000000"
Text_Data(28)  = "00000000000001111100001100011001100000000011000000000111100000000011000000000110011000110000111110000000000000"
Text_Data(29)  = "00000000000111111110011111111001001100100000110000000011000000001100000000110000000111100000111111000000000000"
' U~Z
Text_Data(30)  = "00000000000111001110001100110000110011000011001100001100110000110011000011001100001111110000011110000000000000"
Text_Data(31)  = "00000000000111001110001100110000110011000011001100001100110000110011000001111000000111100000001100000000000000"
Text_Data(32)  = "00000000000110000110011000011001101101100110110110011111111001111111100011001100001100110000110011000000000000"
Text_Data(33)  = "00000000000111001110001100110000110011000001111000000111100000110011000011001100011000011001100001100000000000"
Text_Data(34)  = "00000000000110000110011000011000110011000011001100000011000000001100000000110000000011000000011110000000000000"
Text_Data(35)  = "00000000000111111110010000011000000011000000011000000011000000011000000011000110011111111001111111100000000000"
'@:/.-_^[Pc]
Text_Data(36)  = "00000000000011111100011000011011001100111101001011111000101111100011111101111111011000011000111111000000000000"
Text_Data(37)  = "00000000000000000000000000000000011100000001110000000000000000000000000001110000000111000000000000000000000000"
Text_Data(38)  = "00000000000000011100000001110000001110000000111000000111000000111000000011100000011100000001110000000000000000"
Text_Data(39)  = "00000000000000000000000000000000000000000000000000000000000000000000000001110000000111000000000000000000000000"
Text_Data(40)  = "00000000000000000000000000000000000000000000000000011111111001111111100000000000000000000000000000000000000000"
Text_Data(41)  = "00000000000000000000000000000000000000000000000000000000000000000000000000000000011111111001111111100000000000"
Text_Data(42)  = "00000000001111111000110001100011000110001100011000110011000011111000001100001111110001100011000110000000001111"
'^=Pc '=Tx 


''下面输出文件头部分
Chr_Temp2 = (Text_Len - 1) \ 4 * 220 + ((Text_Len - 1) / 4 - (Text_Len - 1) \ 4 * 4) * 44
Response.BinaryWrite ChrB(&H42) & ChrB(&H4D)
Response.BinaryWrite ChrB(((Chr_Temp2 + 206) / 256 - (Chr_Temp2 + 206) \ 256) * 256) & ChrB((Chr_Temp2 + 206) \ 256)   ''特殊位
Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H76) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H28) & ChrB(0) & ChrB(0) & ChrB(0)
Response.BinaryWrite ChrB(Text_Len * 10)   ''特殊位
Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&HB) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H1) & ChrB(0) & ChrB(&H4) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0)
Response.BinaryWrite ChrB(((Chr_Temp2 + 88) / 256 - (Chr_Temp2 + 88) \ 256) * 256) & ChrB((Chr_Temp2 + 88) \ 256)   ''特殊位

Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(16) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(16) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H80) & ChrB(0) & ChrB(0) & ChrB(&H80) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H80) & ChrB(&H80) & ChrB(0) & ChrB(&H80) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&H80) & ChrB(0) & ChrB(&H80) & ChrB(0)
Response.BinaryWrite ChrB(&H80) & ChrB(&H80) & ChrB(0) & ChrB(0) & ChrB(&H80) & ChrB(&H80) & ChrB(&H80) & ChrB(0) & ChrB(&HC0) & ChrB(&HC0) & ChrB(&HC0) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&HFF) & ChrB(0) & ChrB(0) & ChrB(&HFF) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&HFF) & ChrB(&HFF) & ChrB(0) & ChrB(&HFF) & ChrB(0) & ChrB(0) & ChrB(0) & ChrB(&HFF) & ChrB(0) & ChrB(&HFF) & ChrB(0) & ChrB(&HFF) & ChrB(&HFF) & ChrB(0) & ChrB(0) & ChrB(&HFF) & ChrB(&HFF) & ChrB(&HFF) & ChrB(0)

''下面输出图片数据
For i = 10 to 0 Step -1 '10 to 0
   For j = 0 to Text_Len - 1
      For k = 1 to 9 Step 2
         If Mid(Text_Data(Chr_Temp(j)) ,  i * 10 + k , 1) = "0" Then Chr_Temp2 = Get_BackColor() * 16 Else Chr_Temp2 = Get_ForeColor() * 16
         If Mid(Text_Data(Chr_Temp(j)) ,  i * 10 + k + 1 , 1) = "0" Then Chr_Temp2 = Chr_Temp2 + Get_BackColor() Else Chr_Temp2 = Chr_Temp2 + Get_ForeColor()
         Response.BinaryWrite ChrB(Chr_Temp2)
      Next
   Next
   Chr_Temp2 = (Text_Len / 4 - Text_Len \ 4) * 4
   Select Case Chr_Temp2
   Case 1
      Response.BinaryWrite ChrB(0) & ChrB(0) & ChrB(0)
   Case 2
      Response.BinaryWrite ChrB(0) & ChrB(0)
   Case 3
      Response.BinaryWrite ChrB(0)
   End Select
Next

Function Get_BackColor()
  Get_BackColor = PeaceBckColr 
End Function
'0000-1000-0100-1100-0010-1010-0110-1110:0001-1001-0101-1101-0011-1011-0111-1111
'#000                                    #CCC #F00 #0F0 #FFC #00F #F0F #0FF #FFF
Function Get_ForeColor()
  Get_ForeColor = PeaceForColr 
End Function

%>

